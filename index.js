const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const sequelize = require('./Db/db'); // Import your Sequelize instance
const userRoutes = require('./Routes/userRoute');
const eventRoutes = require('./Routes/eventRouts');
const entryRoutes = require('./Routes/entryRoutes');
const swaggerJsDoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');
const app = express();

app.use(bodyParser.json());
app.use(cors());




app.use('/userRoutes',userRoutes);
app.use('/eventRoutes',eventRoutes);
app.use('/entryRoutes',entryRoutes);



// Swagger set up
const swaggerOptions = {
  swaggerDefinition: {
    openapi: '3.0.0',
    info: {
      title: 'API Documentation',
      version: '1.0.0',
      description: 'Your API documentation'
    },
    servers: [
      {
        url: 'http://localhost:5000',
      },
    ],
  },
  apis: ['./Routes/*.js'], // Path to your route files for documentation generation
};

// SwaggerDocs generated by swagger-jsdoc
const swaggerDocs = swaggerJsDoc(swaggerOptions);

// Set up the Swagger UI at the /api-docs route
app.use('/', swaggerUi.serve, swaggerUi.setup(swaggerDocs));



// Define an async function to start the server and sync the database
const startServer = async () => {
  try {
    await sequelize.sync();
    console.log('Users table synced successfully');

    const PORT = process.env.PORT || 5000;
    app.listen(PORT, () => {
      console.log(`Server is running on port ${PORT}`);
    });
  } catch (err) {
    console.error('Unable to sync table:', err);
  }
};

// Call the function to start the server
startServer();
